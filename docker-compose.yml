version: '3.8' # Можна видалити, як попереджає Docker Compose, але поки залишимо

services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: contacts_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d contacts_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  # Сервіс для ініціалізації бази даних за допомогою Alembic міграцій
  db-init:
    build: . # Використовує той самий Dockerfile, що й web
    command: >
      /bin/sh -c "while ! pg_isready -h db -p 5432 -U postgres -d contacts_db; do
        echo 'Waiting for DB-INIT: PostgreSQL to be fully ready...';
        sleep 2;
      done;
      echo 'DB-INIT: PostgreSQL is ready. Running Alembic migrations...';
      alembic upgrade head
      "
    volumes: # Маємо монтувати об'єм, щоб Alembic бачив файли міграцій
      - .:/app
    depends_on:
      db:
        condition: service_healthy # db-init запускається після того, як db стане healthy

  web:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db-init: # web залежить від db-init, щоб db-init завершився перед запуском web
        condition: service_completed_successfully
      redis:
        condition: service_started
    env_file:
      - ./.env

volumes:
  postgres_data:
